
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/**
 * This file exports the `BookEntry` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model BookEntry
 * 
 */
export type BookEntryModel = runtime.Types.Result.DefaultSelection<Prisma.$BookEntryPayload>

export type AggregateBookEntry = {
  _count: BookEntryCountAggregateOutputType | null
  _avg: BookEntryAvgAggregateOutputType | null
  _sum: BookEntrySumAggregateOutputType | null
  _min: BookEntryMinAggregateOutputType | null
  _max: BookEntryMaxAggregateOutputType | null
}

export type BookEntryAvgAggregateOutputType = {
  score: number | null
  progress: number | null
  total_repeats: number | null
}

export type BookEntrySumAggregateOutputType = {
  score: number | null
  progress: number | null
  total_repeats: number | null
}

export type BookEntryMinAggregateOutputType = {
  id: string | null
  user_ID: string | null
  book_ID: string | null
  status: $Enums.ReadingStatus | null
  score: number | null
  progress: number | null
  start_date: string | null
  finish_date: string | null
  total_repeats: number | null
  notes: string | null
  private: boolean | null
  created_at: Date | null
  updated_at: Date | null
}

export type BookEntryMaxAggregateOutputType = {
  id: string | null
  user_ID: string | null
  book_ID: string | null
  status: $Enums.ReadingStatus | null
  score: number | null
  progress: number | null
  start_date: string | null
  finish_date: string | null
  total_repeats: number | null
  notes: string | null
  private: boolean | null
  created_at: Date | null
  updated_at: Date | null
}

export type BookEntryCountAggregateOutputType = {
  id: number
  user_ID: number
  book_ID: number
  status: number
  score: number
  progress: number
  start_date: number
  finish_date: number
  total_repeats: number
  notes: number
  private: number
  custom_list_IDs: number
  created_at: number
  updated_at: number
  _all: number
}


export type BookEntryAvgAggregateInputType = {
  score?: true
  progress?: true
  total_repeats?: true
}

export type BookEntrySumAggregateInputType = {
  score?: true
  progress?: true
  total_repeats?: true
}

export type BookEntryMinAggregateInputType = {
  id?: true
  user_ID?: true
  book_ID?: true
  status?: true
  score?: true
  progress?: true
  start_date?: true
  finish_date?: true
  total_repeats?: true
  notes?: true
  private?: true
  created_at?: true
  updated_at?: true
}

export type BookEntryMaxAggregateInputType = {
  id?: true
  user_ID?: true
  book_ID?: true
  status?: true
  score?: true
  progress?: true
  start_date?: true
  finish_date?: true
  total_repeats?: true
  notes?: true
  private?: true
  created_at?: true
  updated_at?: true
}

export type BookEntryCountAggregateInputType = {
  id?: true
  user_ID?: true
  book_ID?: true
  status?: true
  score?: true
  progress?: true
  start_date?: true
  finish_date?: true
  total_repeats?: true
  notes?: true
  private?: true
  custom_list_IDs?: true
  created_at?: true
  updated_at?: true
  _all?: true
}

export type BookEntryAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which BookEntry to aggregate.
   */
  where?: Prisma.BookEntryWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of BookEntries to fetch.
   */
  orderBy?: Prisma.BookEntryOrderByWithRelationInput | Prisma.BookEntryOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.BookEntryWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` BookEntries from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` BookEntries.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned BookEntries
  **/
  _count?: true | BookEntryCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: BookEntryAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: BookEntrySumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: BookEntryMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: BookEntryMaxAggregateInputType
}

export type GetBookEntryAggregateType<T extends BookEntryAggregateArgs> = {
      [P in keyof T & keyof AggregateBookEntry]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateBookEntry[P]>
    : Prisma.GetScalarType<T[P], AggregateBookEntry[P]>
}




export type BookEntryGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.BookEntryWhereInput
  orderBy?: Prisma.BookEntryOrderByWithAggregationInput | Prisma.BookEntryOrderByWithAggregationInput[]
  by: Prisma.BookEntryScalarFieldEnum[] | Prisma.BookEntryScalarFieldEnum
  having?: Prisma.BookEntryScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: BookEntryCountAggregateInputType | true
  _avg?: BookEntryAvgAggregateInputType
  _sum?: BookEntrySumAggregateInputType
  _min?: BookEntryMinAggregateInputType
  _max?: BookEntryMaxAggregateInputType
}

export type BookEntryGroupByOutputType = {
  id: string
  user_ID: string
  book_ID: string
  status: $Enums.ReadingStatus | null
  score: number | null
  progress: number | null
  start_date: string | null
  finish_date: string | null
  total_repeats: number | null
  notes: string | null
  private: boolean | null
  custom_list_IDs: string[]
  created_at: Date
  updated_at: Date
  _count: BookEntryCountAggregateOutputType | null
  _avg: BookEntryAvgAggregateOutputType | null
  _sum: BookEntrySumAggregateOutputType | null
  _min: BookEntryMinAggregateOutputType | null
  _max: BookEntryMaxAggregateOutputType | null
}

type GetBookEntryGroupByPayload<T extends BookEntryGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<BookEntryGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof BookEntryGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], BookEntryGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], BookEntryGroupByOutputType[P]>
      }
    >
  > 



export type BookEntryWhereInput = {
  AND?: Prisma.BookEntryWhereInput | Prisma.BookEntryWhereInput[]
  OR?: Prisma.BookEntryWhereInput[]
  NOT?: Prisma.BookEntryWhereInput | Prisma.BookEntryWhereInput[]
  id?: Prisma.StringFilter<"BookEntry"> | string
  user_ID?: Prisma.StringFilter<"BookEntry"> | string
  book_ID?: Prisma.StringFilter<"BookEntry"> | string
  status?: Prisma.EnumReadingStatusNullableFilter<"BookEntry"> | $Enums.ReadingStatus | null
  score?: Prisma.IntNullableFilter<"BookEntry"> | number | null
  progress?: Prisma.IntNullableFilter<"BookEntry"> | number | null
  start_date?: Prisma.StringNullableFilter<"BookEntry"> | string | null
  finish_date?: Prisma.StringNullableFilter<"BookEntry"> | string | null
  total_repeats?: Prisma.IntNullableFilter<"BookEntry"> | number | null
  notes?: Prisma.StringNullableFilter<"BookEntry"> | string | null
  private?: Prisma.BoolNullableFilter<"BookEntry"> | boolean | null
  custom_list_IDs?: Prisma.StringNullableListFilter<"BookEntry">
  created_at?: Prisma.DateTimeFilter<"BookEntry"> | Date | string
  updated_at?: Prisma.DateTimeFilter<"BookEntry"> | Date | string
}

export type BookEntryOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  user_ID?: Prisma.SortOrder
  book_ID?: Prisma.SortOrder
  status?: Prisma.SortOrder
  score?: Prisma.SortOrder
  progress?: Prisma.SortOrder
  start_date?: Prisma.SortOrder
  finish_date?: Prisma.SortOrder
  total_repeats?: Prisma.SortOrder
  notes?: Prisma.SortOrder
  private?: Prisma.SortOrder
  custom_list_IDs?: Prisma.SortOrder
  created_at?: Prisma.SortOrder
  updated_at?: Prisma.SortOrder
}

export type BookEntryWhereUniqueInput = Prisma.AtLeast<{
  id?: string
  user_ID_book_ID?: Prisma.BookEntryUser_IDBook_IDCompoundUniqueInput
  AND?: Prisma.BookEntryWhereInput | Prisma.BookEntryWhereInput[]
  OR?: Prisma.BookEntryWhereInput[]
  NOT?: Prisma.BookEntryWhereInput | Prisma.BookEntryWhereInput[]
  user_ID?: Prisma.StringFilter<"BookEntry"> | string
  book_ID?: Prisma.StringFilter<"BookEntry"> | string
  status?: Prisma.EnumReadingStatusNullableFilter<"BookEntry"> | $Enums.ReadingStatus | null
  score?: Prisma.IntNullableFilter<"BookEntry"> | number | null
  progress?: Prisma.IntNullableFilter<"BookEntry"> | number | null
  start_date?: Prisma.StringNullableFilter<"BookEntry"> | string | null
  finish_date?: Prisma.StringNullableFilter<"BookEntry"> | string | null
  total_repeats?: Prisma.IntNullableFilter<"BookEntry"> | number | null
  notes?: Prisma.StringNullableFilter<"BookEntry"> | string | null
  private?: Prisma.BoolNullableFilter<"BookEntry"> | boolean | null
  custom_list_IDs?: Prisma.StringNullableListFilter<"BookEntry">
  created_at?: Prisma.DateTimeFilter<"BookEntry"> | Date | string
  updated_at?: Prisma.DateTimeFilter<"BookEntry"> | Date | string
}, "id" | "user_ID_book_ID">

export type BookEntryOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  user_ID?: Prisma.SortOrder
  book_ID?: Prisma.SortOrder
  status?: Prisma.SortOrder
  score?: Prisma.SortOrder
  progress?: Prisma.SortOrder
  start_date?: Prisma.SortOrder
  finish_date?: Prisma.SortOrder
  total_repeats?: Prisma.SortOrder
  notes?: Prisma.SortOrder
  private?: Prisma.SortOrder
  custom_list_IDs?: Prisma.SortOrder
  created_at?: Prisma.SortOrder
  updated_at?: Prisma.SortOrder
  _count?: Prisma.BookEntryCountOrderByAggregateInput
  _avg?: Prisma.BookEntryAvgOrderByAggregateInput
  _max?: Prisma.BookEntryMaxOrderByAggregateInput
  _min?: Prisma.BookEntryMinOrderByAggregateInput
  _sum?: Prisma.BookEntrySumOrderByAggregateInput
}

export type BookEntryScalarWhereWithAggregatesInput = {
  AND?: Prisma.BookEntryScalarWhereWithAggregatesInput | Prisma.BookEntryScalarWhereWithAggregatesInput[]
  OR?: Prisma.BookEntryScalarWhereWithAggregatesInput[]
  NOT?: Prisma.BookEntryScalarWhereWithAggregatesInput | Prisma.BookEntryScalarWhereWithAggregatesInput[]
  id?: Prisma.StringWithAggregatesFilter<"BookEntry"> | string
  user_ID?: Prisma.StringWithAggregatesFilter<"BookEntry"> | string
  book_ID?: Prisma.StringWithAggregatesFilter<"BookEntry"> | string
  status?: Prisma.EnumReadingStatusNullableWithAggregatesFilter<"BookEntry"> | $Enums.ReadingStatus | null
  score?: Prisma.IntNullableWithAggregatesFilter<"BookEntry"> | number | null
  progress?: Prisma.IntNullableWithAggregatesFilter<"BookEntry"> | number | null
  start_date?: Prisma.StringNullableWithAggregatesFilter<"BookEntry"> | string | null
  finish_date?: Prisma.StringNullableWithAggregatesFilter<"BookEntry"> | string | null
  total_repeats?: Prisma.IntNullableWithAggregatesFilter<"BookEntry"> | number | null
  notes?: Prisma.StringNullableWithAggregatesFilter<"BookEntry"> | string | null
  private?: Prisma.BoolNullableWithAggregatesFilter<"BookEntry"> | boolean | null
  custom_list_IDs?: Prisma.StringNullableListFilter<"BookEntry">
  created_at?: Prisma.DateTimeWithAggregatesFilter<"BookEntry"> | Date | string
  updated_at?: Prisma.DateTimeWithAggregatesFilter<"BookEntry"> | Date | string
}

export type BookEntryCreateInput = {
  id?: string
  user_ID: string
  book_ID: string
  status?: $Enums.ReadingStatus | null
  score?: number | null
  progress?: number | null
  start_date?: string | null
  finish_date?: string | null
  total_repeats?: number | null
  notes?: string | null
  private?: boolean | null
  custom_list_IDs?: Prisma.BookEntryCreatecustom_list_IDsInput | string[]
  created_at?: Date | string
  updated_at?: Date | string
}

export type BookEntryUncheckedCreateInput = {
  id?: string
  user_ID: string
  book_ID: string
  status?: $Enums.ReadingStatus | null
  score?: number | null
  progress?: number | null
  start_date?: string | null
  finish_date?: string | null
  total_repeats?: number | null
  notes?: string | null
  private?: boolean | null
  custom_list_IDs?: Prisma.BookEntryCreatecustom_list_IDsInput | string[]
  created_at?: Date | string
  updated_at?: Date | string
}

export type BookEntryUpdateInput = {
  user_ID?: Prisma.StringFieldUpdateOperationsInput | string
  book_ID?: Prisma.StringFieldUpdateOperationsInput | string
  status?: Prisma.NullableEnumReadingStatusFieldUpdateOperationsInput | $Enums.ReadingStatus | null
  score?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  progress?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  start_date?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  finish_date?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  total_repeats?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  private?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  custom_list_IDs?: Prisma.BookEntryUpdatecustom_list_IDsInput | string[]
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updated_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type BookEntryUncheckedUpdateInput = {
  user_ID?: Prisma.StringFieldUpdateOperationsInput | string
  book_ID?: Prisma.StringFieldUpdateOperationsInput | string
  status?: Prisma.NullableEnumReadingStatusFieldUpdateOperationsInput | $Enums.ReadingStatus | null
  score?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  progress?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  start_date?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  finish_date?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  total_repeats?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  private?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  custom_list_IDs?: Prisma.BookEntryUpdatecustom_list_IDsInput | string[]
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updated_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type BookEntryCreateManyInput = {
  id?: string
  user_ID: string
  book_ID: string
  status?: $Enums.ReadingStatus | null
  score?: number | null
  progress?: number | null
  start_date?: string | null
  finish_date?: string | null
  total_repeats?: number | null
  notes?: string | null
  private?: boolean | null
  custom_list_IDs?: Prisma.BookEntryCreatecustom_list_IDsInput | string[]
  created_at?: Date | string
  updated_at?: Date | string
}

export type BookEntryUpdateManyMutationInput = {
  user_ID?: Prisma.StringFieldUpdateOperationsInput | string
  book_ID?: Prisma.StringFieldUpdateOperationsInput | string
  status?: Prisma.NullableEnumReadingStatusFieldUpdateOperationsInput | $Enums.ReadingStatus | null
  score?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  progress?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  start_date?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  finish_date?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  total_repeats?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  private?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  custom_list_IDs?: Prisma.BookEntryUpdatecustom_list_IDsInput | string[]
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updated_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type BookEntryUncheckedUpdateManyInput = {
  user_ID?: Prisma.StringFieldUpdateOperationsInput | string
  book_ID?: Prisma.StringFieldUpdateOperationsInput | string
  status?: Prisma.NullableEnumReadingStatusFieldUpdateOperationsInput | $Enums.ReadingStatus | null
  score?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  progress?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  start_date?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  finish_date?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  total_repeats?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  private?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  custom_list_IDs?: Prisma.BookEntryUpdatecustom_list_IDsInput | string[]
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updated_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type BookEntryUser_IDBook_IDCompoundUniqueInput = {
  user_ID: string
  book_ID: string
}

export type BookEntryCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  user_ID?: Prisma.SortOrder
  book_ID?: Prisma.SortOrder
  status?: Prisma.SortOrder
  score?: Prisma.SortOrder
  progress?: Prisma.SortOrder
  start_date?: Prisma.SortOrder
  finish_date?: Prisma.SortOrder
  total_repeats?: Prisma.SortOrder
  notes?: Prisma.SortOrder
  private?: Prisma.SortOrder
  custom_list_IDs?: Prisma.SortOrder
  created_at?: Prisma.SortOrder
  updated_at?: Prisma.SortOrder
}

export type BookEntryAvgOrderByAggregateInput = {
  score?: Prisma.SortOrder
  progress?: Prisma.SortOrder
  total_repeats?: Prisma.SortOrder
}

export type BookEntryMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  user_ID?: Prisma.SortOrder
  book_ID?: Prisma.SortOrder
  status?: Prisma.SortOrder
  score?: Prisma.SortOrder
  progress?: Prisma.SortOrder
  start_date?: Prisma.SortOrder
  finish_date?: Prisma.SortOrder
  total_repeats?: Prisma.SortOrder
  notes?: Prisma.SortOrder
  private?: Prisma.SortOrder
  created_at?: Prisma.SortOrder
  updated_at?: Prisma.SortOrder
}

export type BookEntryMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  user_ID?: Prisma.SortOrder
  book_ID?: Prisma.SortOrder
  status?: Prisma.SortOrder
  score?: Prisma.SortOrder
  progress?: Prisma.SortOrder
  start_date?: Prisma.SortOrder
  finish_date?: Prisma.SortOrder
  total_repeats?: Prisma.SortOrder
  notes?: Prisma.SortOrder
  private?: Prisma.SortOrder
  created_at?: Prisma.SortOrder
  updated_at?: Prisma.SortOrder
}

export type BookEntrySumOrderByAggregateInput = {
  score?: Prisma.SortOrder
  progress?: Prisma.SortOrder
  total_repeats?: Prisma.SortOrder
}

export type BookEntryCreatecustom_list_IDsInput = {
  set: string[]
}

export type NullableEnumReadingStatusFieldUpdateOperationsInput = {
  set?: $Enums.ReadingStatus | null
  unset?: boolean
}

export type NullableIntFieldUpdateOperationsInput = {
  set?: number | null
  increment?: number
  decrement?: number
  multiply?: number
  divide?: number
  unset?: boolean
}

export type NullableStringFieldUpdateOperationsInput = {
  set?: string | null
  unset?: boolean
}

export type NullableBoolFieldUpdateOperationsInput = {
  set?: boolean | null
  unset?: boolean
}

export type BookEntryUpdatecustom_list_IDsInput = {
  set?: string[]
  push?: string | string[]
}



export type BookEntrySelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  user_ID?: boolean
  book_ID?: boolean
  status?: boolean
  score?: boolean
  progress?: boolean
  start_date?: boolean
  finish_date?: boolean
  total_repeats?: boolean
  notes?: boolean
  private?: boolean
  custom_list_IDs?: boolean
  created_at?: boolean
  updated_at?: boolean
}, ExtArgs["result"]["bookEntry"]>



export type BookEntrySelectScalar = {
  id?: boolean
  user_ID?: boolean
  book_ID?: boolean
  status?: boolean
  score?: boolean
  progress?: boolean
  start_date?: boolean
  finish_date?: boolean
  total_repeats?: boolean
  notes?: boolean
  private?: boolean
  custom_list_IDs?: boolean
  created_at?: boolean
  updated_at?: boolean
}

export type BookEntryOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "user_ID" | "book_ID" | "status" | "score" | "progress" | "start_date" | "finish_date" | "total_repeats" | "notes" | "private" | "custom_list_IDs" | "created_at" | "updated_at", ExtArgs["result"]["bookEntry"]>

export type $BookEntryPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "BookEntry"
  objects: {}
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: string
    user_ID: string
    book_ID: string
    status: $Enums.ReadingStatus | null
    score: number | null
    progress: number | null
    start_date: string | null
    finish_date: string | null
    total_repeats: number | null
    notes: string | null
    private: boolean | null
    custom_list_IDs: string[]
    created_at: Date
    updated_at: Date
  }, ExtArgs["result"]["bookEntry"]>
  composites: {}
}

export type BookEntryGetPayload<S extends boolean | null | undefined | BookEntryDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$BookEntryPayload, S>

export type BookEntryCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<BookEntryFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: BookEntryCountAggregateInputType | true
  }

export interface BookEntryDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['BookEntry'], meta: { name: 'BookEntry' } }
  /**
   * Find zero or one BookEntry that matches the filter.
   * @param {BookEntryFindUniqueArgs} args - Arguments to find a BookEntry
   * @example
   * // Get one BookEntry
   * const bookEntry = await prisma.bookEntry.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends BookEntryFindUniqueArgs>(args: Prisma.SelectSubset<T, BookEntryFindUniqueArgs<ExtArgs>>): Prisma.Prisma__BookEntryClient<runtime.Types.Result.GetResult<Prisma.$BookEntryPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one BookEntry that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {BookEntryFindUniqueOrThrowArgs} args - Arguments to find a BookEntry
   * @example
   * // Get one BookEntry
   * const bookEntry = await prisma.bookEntry.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends BookEntryFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, BookEntryFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__BookEntryClient<runtime.Types.Result.GetResult<Prisma.$BookEntryPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first BookEntry that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {BookEntryFindFirstArgs} args - Arguments to find a BookEntry
   * @example
   * // Get one BookEntry
   * const bookEntry = await prisma.bookEntry.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends BookEntryFindFirstArgs>(args?: Prisma.SelectSubset<T, BookEntryFindFirstArgs<ExtArgs>>): Prisma.Prisma__BookEntryClient<runtime.Types.Result.GetResult<Prisma.$BookEntryPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first BookEntry that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {BookEntryFindFirstOrThrowArgs} args - Arguments to find a BookEntry
   * @example
   * // Get one BookEntry
   * const bookEntry = await prisma.bookEntry.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends BookEntryFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, BookEntryFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__BookEntryClient<runtime.Types.Result.GetResult<Prisma.$BookEntryPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more BookEntries that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {BookEntryFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all BookEntries
   * const bookEntries = await prisma.bookEntry.findMany()
   * 
   * // Get first 10 BookEntries
   * const bookEntries = await prisma.bookEntry.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const bookEntryWithIdOnly = await prisma.bookEntry.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends BookEntryFindManyArgs>(args?: Prisma.SelectSubset<T, BookEntryFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$BookEntryPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a BookEntry.
   * @param {BookEntryCreateArgs} args - Arguments to create a BookEntry.
   * @example
   * // Create one BookEntry
   * const BookEntry = await prisma.bookEntry.create({
   *   data: {
   *     // ... data to create a BookEntry
   *   }
   * })
   * 
   */
  create<T extends BookEntryCreateArgs>(args: Prisma.SelectSubset<T, BookEntryCreateArgs<ExtArgs>>): Prisma.Prisma__BookEntryClient<runtime.Types.Result.GetResult<Prisma.$BookEntryPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many BookEntries.
   * @param {BookEntryCreateManyArgs} args - Arguments to create many BookEntries.
   * @example
   * // Create many BookEntries
   * const bookEntry = await prisma.bookEntry.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends BookEntryCreateManyArgs>(args?: Prisma.SelectSubset<T, BookEntryCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Delete a BookEntry.
   * @param {BookEntryDeleteArgs} args - Arguments to delete one BookEntry.
   * @example
   * // Delete one BookEntry
   * const BookEntry = await prisma.bookEntry.delete({
   *   where: {
   *     // ... filter to delete one BookEntry
   *   }
   * })
   * 
   */
  delete<T extends BookEntryDeleteArgs>(args: Prisma.SelectSubset<T, BookEntryDeleteArgs<ExtArgs>>): Prisma.Prisma__BookEntryClient<runtime.Types.Result.GetResult<Prisma.$BookEntryPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one BookEntry.
   * @param {BookEntryUpdateArgs} args - Arguments to update one BookEntry.
   * @example
   * // Update one BookEntry
   * const bookEntry = await prisma.bookEntry.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends BookEntryUpdateArgs>(args: Prisma.SelectSubset<T, BookEntryUpdateArgs<ExtArgs>>): Prisma.Prisma__BookEntryClient<runtime.Types.Result.GetResult<Prisma.$BookEntryPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more BookEntries.
   * @param {BookEntryDeleteManyArgs} args - Arguments to filter BookEntries to delete.
   * @example
   * // Delete a few BookEntries
   * const { count } = await prisma.bookEntry.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends BookEntryDeleteManyArgs>(args?: Prisma.SelectSubset<T, BookEntryDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more BookEntries.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {BookEntryUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many BookEntries
   * const bookEntry = await prisma.bookEntry.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends BookEntryUpdateManyArgs>(args: Prisma.SelectSubset<T, BookEntryUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create or update one BookEntry.
   * @param {BookEntryUpsertArgs} args - Arguments to update or create a BookEntry.
   * @example
   * // Update or create a BookEntry
   * const bookEntry = await prisma.bookEntry.upsert({
   *   create: {
   *     // ... data to create a BookEntry
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the BookEntry we want to update
   *   }
   * })
   */
  upsert<T extends BookEntryUpsertArgs>(args: Prisma.SelectSubset<T, BookEntryUpsertArgs<ExtArgs>>): Prisma.Prisma__BookEntryClient<runtime.Types.Result.GetResult<Prisma.$BookEntryPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more BookEntries that matches the filter.
   * @param {BookEntryFindRawArgs} args - Select which filters you would like to apply.
   * @example
   * const bookEntry = await prisma.bookEntry.findRaw({
   *   filter: { age: { $gt: 25 } }
   * })
   */
  findRaw(args?: Prisma.BookEntryFindRawArgs): Prisma.PrismaPromise<Prisma.JsonObject>

  /**
   * Perform aggregation operations on a BookEntry.
   * @param {BookEntryAggregateRawArgs} args - Select which aggregations you would like to apply.
   * @example
   * const bookEntry = await prisma.bookEntry.aggregateRaw({
   *   pipeline: [
   *     { $match: { status: "registered" } },
   *     { $group: { _id: "$country", total: { $sum: 1 } } }
   *   ]
   * })
   */
  aggregateRaw(args?: Prisma.BookEntryAggregateRawArgs): Prisma.PrismaPromise<Prisma.JsonObject>


  /**
   * Count the number of BookEntries.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {BookEntryCountArgs} args - Arguments to filter BookEntries to count.
   * @example
   * // Count the number of BookEntries
   * const count = await prisma.bookEntry.count({
   *   where: {
   *     // ... the filter for the BookEntries we want to count
   *   }
   * })
  **/
  count<T extends BookEntryCountArgs>(
    args?: Prisma.Subset<T, BookEntryCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], BookEntryCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a BookEntry.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {BookEntryAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends BookEntryAggregateArgs>(args: Prisma.Subset<T, BookEntryAggregateArgs>): Prisma.PrismaPromise<GetBookEntryAggregateType<T>>

  /**
   * Group by BookEntry.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {BookEntryGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends BookEntryGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: BookEntryGroupByArgs['orderBy'] }
      : { orderBy?: BookEntryGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, BookEntryGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetBookEntryGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the BookEntry model
 */
readonly fields: BookEntryFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for BookEntry.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__BookEntryClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the BookEntry model
 */
export interface BookEntryFieldRefs {
  readonly id: Prisma.FieldRef<"BookEntry", 'String'>
  readonly user_ID: Prisma.FieldRef<"BookEntry", 'String'>
  readonly book_ID: Prisma.FieldRef<"BookEntry", 'String'>
  readonly status: Prisma.FieldRef<"BookEntry", 'ReadingStatus'>
  readonly score: Prisma.FieldRef<"BookEntry", 'Int'>
  readonly progress: Prisma.FieldRef<"BookEntry", 'Int'>
  readonly start_date: Prisma.FieldRef<"BookEntry", 'String'>
  readonly finish_date: Prisma.FieldRef<"BookEntry", 'String'>
  readonly total_repeats: Prisma.FieldRef<"BookEntry", 'Int'>
  readonly notes: Prisma.FieldRef<"BookEntry", 'String'>
  readonly private: Prisma.FieldRef<"BookEntry", 'Boolean'>
  readonly custom_list_IDs: Prisma.FieldRef<"BookEntry", 'String[]'>
  readonly created_at: Prisma.FieldRef<"BookEntry", 'DateTime'>
  readonly updated_at: Prisma.FieldRef<"BookEntry", 'DateTime'>
}
    

// Custom InputTypes
/**
 * BookEntry findUnique
 */
export type BookEntryFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the BookEntry
   */
  select?: Prisma.BookEntrySelect<ExtArgs> | null
  /**
   * Omit specific fields from the BookEntry
   */
  omit?: Prisma.BookEntryOmit<ExtArgs> | null
  /**
   * Filter, which BookEntry to fetch.
   */
  where: Prisma.BookEntryWhereUniqueInput
}

/**
 * BookEntry findUniqueOrThrow
 */
export type BookEntryFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the BookEntry
   */
  select?: Prisma.BookEntrySelect<ExtArgs> | null
  /**
   * Omit specific fields from the BookEntry
   */
  omit?: Prisma.BookEntryOmit<ExtArgs> | null
  /**
   * Filter, which BookEntry to fetch.
   */
  where: Prisma.BookEntryWhereUniqueInput
}

/**
 * BookEntry findFirst
 */
export type BookEntryFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the BookEntry
   */
  select?: Prisma.BookEntrySelect<ExtArgs> | null
  /**
   * Omit specific fields from the BookEntry
   */
  omit?: Prisma.BookEntryOmit<ExtArgs> | null
  /**
   * Filter, which BookEntry to fetch.
   */
  where?: Prisma.BookEntryWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of BookEntries to fetch.
   */
  orderBy?: Prisma.BookEntryOrderByWithRelationInput | Prisma.BookEntryOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for BookEntries.
   */
  cursor?: Prisma.BookEntryWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` BookEntries from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` BookEntries.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of BookEntries.
   */
  distinct?: Prisma.BookEntryScalarFieldEnum | Prisma.BookEntryScalarFieldEnum[]
}

/**
 * BookEntry findFirstOrThrow
 */
export type BookEntryFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the BookEntry
   */
  select?: Prisma.BookEntrySelect<ExtArgs> | null
  /**
   * Omit specific fields from the BookEntry
   */
  omit?: Prisma.BookEntryOmit<ExtArgs> | null
  /**
   * Filter, which BookEntry to fetch.
   */
  where?: Prisma.BookEntryWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of BookEntries to fetch.
   */
  orderBy?: Prisma.BookEntryOrderByWithRelationInput | Prisma.BookEntryOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for BookEntries.
   */
  cursor?: Prisma.BookEntryWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` BookEntries from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` BookEntries.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of BookEntries.
   */
  distinct?: Prisma.BookEntryScalarFieldEnum | Prisma.BookEntryScalarFieldEnum[]
}

/**
 * BookEntry findMany
 */
export type BookEntryFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the BookEntry
   */
  select?: Prisma.BookEntrySelect<ExtArgs> | null
  /**
   * Omit specific fields from the BookEntry
   */
  omit?: Prisma.BookEntryOmit<ExtArgs> | null
  /**
   * Filter, which BookEntries to fetch.
   */
  where?: Prisma.BookEntryWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of BookEntries to fetch.
   */
  orderBy?: Prisma.BookEntryOrderByWithRelationInput | Prisma.BookEntryOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing BookEntries.
   */
  cursor?: Prisma.BookEntryWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` BookEntries from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` BookEntries.
   */
  skip?: number
  distinct?: Prisma.BookEntryScalarFieldEnum | Prisma.BookEntryScalarFieldEnum[]
}

/**
 * BookEntry create
 */
export type BookEntryCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the BookEntry
   */
  select?: Prisma.BookEntrySelect<ExtArgs> | null
  /**
   * Omit specific fields from the BookEntry
   */
  omit?: Prisma.BookEntryOmit<ExtArgs> | null
  /**
   * The data needed to create a BookEntry.
   */
  data: Prisma.XOR<Prisma.BookEntryCreateInput, Prisma.BookEntryUncheckedCreateInput>
}

/**
 * BookEntry createMany
 */
export type BookEntryCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many BookEntries.
   */
  data: Prisma.BookEntryCreateManyInput | Prisma.BookEntryCreateManyInput[]
}

/**
 * BookEntry update
 */
export type BookEntryUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the BookEntry
   */
  select?: Prisma.BookEntrySelect<ExtArgs> | null
  /**
   * Omit specific fields from the BookEntry
   */
  omit?: Prisma.BookEntryOmit<ExtArgs> | null
  /**
   * The data needed to update a BookEntry.
   */
  data: Prisma.XOR<Prisma.BookEntryUpdateInput, Prisma.BookEntryUncheckedUpdateInput>
  /**
   * Choose, which BookEntry to update.
   */
  where: Prisma.BookEntryWhereUniqueInput
}

/**
 * BookEntry updateMany
 */
export type BookEntryUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update BookEntries.
   */
  data: Prisma.XOR<Prisma.BookEntryUpdateManyMutationInput, Prisma.BookEntryUncheckedUpdateManyInput>
  /**
   * Filter which BookEntries to update
   */
  where?: Prisma.BookEntryWhereInput
  /**
   * Limit how many BookEntries to update.
   */
  limit?: number
}

/**
 * BookEntry upsert
 */
export type BookEntryUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the BookEntry
   */
  select?: Prisma.BookEntrySelect<ExtArgs> | null
  /**
   * Omit specific fields from the BookEntry
   */
  omit?: Prisma.BookEntryOmit<ExtArgs> | null
  /**
   * The filter to search for the BookEntry to update in case it exists.
   */
  where: Prisma.BookEntryWhereUniqueInput
  /**
   * In case the BookEntry found by the `where` argument doesn't exist, create a new BookEntry with this data.
   */
  create: Prisma.XOR<Prisma.BookEntryCreateInput, Prisma.BookEntryUncheckedCreateInput>
  /**
   * In case the BookEntry was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.BookEntryUpdateInput, Prisma.BookEntryUncheckedUpdateInput>
}

/**
 * BookEntry delete
 */
export type BookEntryDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the BookEntry
   */
  select?: Prisma.BookEntrySelect<ExtArgs> | null
  /**
   * Omit specific fields from the BookEntry
   */
  omit?: Prisma.BookEntryOmit<ExtArgs> | null
  /**
   * Filter which BookEntry to delete.
   */
  where: Prisma.BookEntryWhereUniqueInput
}

/**
 * BookEntry deleteMany
 */
export type BookEntryDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which BookEntries to delete
   */
  where?: Prisma.BookEntryWhereInput
  /**
   * Limit how many BookEntries to delete.
   */
  limit?: number
}

/**
 * BookEntry findRaw
 */
export type BookEntryFindRawArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The query predicate filter. If unspecified, then all documents in the collection will match the predicate. ${@link https://docs.mongodb.com/manual/reference/operator/query MongoDB Docs}.
   */
  filter?: runtime.InputJsonValue
  /**
   * Additional options to pass to the `find` command ${@link https://docs.mongodb.com/manual/reference/command/find/#command-fields MongoDB Docs}.
   */
  options?: runtime.InputJsonValue
}

/**
 * BookEntry aggregateRaw
 */
export type BookEntryAggregateRawArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * An array of aggregation stages to process and transform the document stream via the aggregation pipeline. ${@link https://docs.mongodb.com/manual/reference/operator/aggregation-pipeline MongoDB Docs}.
   */
  pipeline?: runtime.InputJsonValue[]
  /**
   * Additional options to pass to the `aggregate` command ${@link https://docs.mongodb.com/manual/reference/command/aggregate/#command-fields MongoDB Docs}.
   */
  options?: runtime.InputJsonValue
}

/**
 * BookEntry without action
 */
export type BookEntryDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the BookEntry
   */
  select?: Prisma.BookEntrySelect<ExtArgs> | null
  /**
   * Omit specific fields from the BookEntry
   */
  omit?: Prisma.BookEntryOmit<ExtArgs> | null
}
